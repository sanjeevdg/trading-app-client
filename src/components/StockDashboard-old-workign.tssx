import React, { useState } from "react";
import {
  LineChart,
  Line,
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
} from "recharts";

export default function StockDashboard() {
  const [symbols, setSymbols] = useState("QCOM,TXN,CSCO,HPQ,MCHP");
  const [data, setData] = useState<any[]>([]);
  const [loading, setLoading] = useState(false);

  const fetchStocks = async () => {
    setLoading(true);
    try {
      const res = await fetch("http://localhost:4000/api/sdhstocks", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ symbols: symbols.split(",").map((s) => s.trim()) }),
      });
      const result = await res.json();
      setData(result);
    } catch (err) {
      console.error(err);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container">
      <h2 className="text-2xl font-semibold mb-4">ðŸ“ˆ Stock Yield & Trend Dashboard</h2>

      <div className="flex items-center gap-4 mb-6">
        <input
          type="text"
          value={symbols}
          onChange={(e) => setSymbols(e.target.value)}
          placeholder="Enter stock symbols (comma-separated)"
          className="border px-3 py-2 rounded-md w-96"
        />
        <button
          onClick={fetchStocks}
          className="bg-blue-600 text-white px-4 py-2 rounded-md"
          disabled={loading}
        >
          {loading ? "Fetching..." : "Analyze"}
        </button>
      </div>

      {data.length > 0 && (
        <>
          <h3 className="text-lg font-semibold mt-6 mb-2">Current Dividend Yields & P/E Ratios</h3>
          <ResponsiveContainer width="100%" height={300}>
            <BarChart data={data}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="symbol" />
              <YAxis />
              <Tooltip />
              <Legend />
              <Bar dataKey="dividendYield" fill="#82ca9d" name="Dividend Yield (%)" />
              <Bar dataKey="peRatio" fill="#8884d8" name="P/E Ratio" />
            </BarChart>
          </ResponsiveContainer>

          <div className="overflow-x-auto mt-6">
            <table className="min-w-full border text-sm">
              <thead className="bg-gray-100">
                <tr>
                  <th className="border px-3 py-2 text-left">Symbol</th>
                  <th className="border px-3 py-2 text-left">Price</th>
                  <th className="border px-3 py-2 text-left">Dividend Yield (%)</th>
                  <th className="border px-3 py-2 text-left">P/E</th>
                  <th className="border px-3 py-2 text-left">EPS</th>
                  <th className="border px-3 py-2 text-left">Market Cap</th>
                </tr>
              </thead>
              <tbody>
                {data.map((s) => (
                  <tr key={s.symbol}>
                    <td className="border px-3 py-2 font-semibold">{s.symbol}</td>
                    <td className="border px-3 py-2">${s.price}</td>
                    <td className="border px-3 py-2">{s.dividendYield}%</td>
                    <td className="border px-3 py-2">{s.peRatio || "N/A"}</td>
                    <td className="border px-3 py-2">{s.eps || "N/A"}</td>
                    <td className="border px-3 py-2">
                      {(s.marketCap / 1e9).toFixed(2)} B
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          <h3 className="text-lg font-semibold mt-8 mb-2">
            Historical Dividend Yield Trends (5 Years)
          </h3>

          {data.map((stock) => (
            <div key={stock.symbol} className="mb-10">
              <h4 className="text-md font-medium mb-2">{stock.symbol}</h4>
              <ResponsiveContainer width="100%" height={250}>
                <LineChart data={stock.dividendYields}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis
                    dataKey="date"
                    tickFormatter={(d) => new Date(d).getFullYear().toString()}
                  />
                  <YAxis />
                  <Tooltip />
                  <Line type="monotone" dataKey="yield" stroke="#82ca9d" name="Dividend Yield (%)" />
                </LineChart>
              </ResponsiveContainer>
            </div>
          ))}
        </>
      )}
    </div>
  );
}
